# $Id$
# Maintainer: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>

_gitroot="git://github.com/mozilla/gecko-dev"
_gitname="gecko-dev"

pkgname=firefox-nightly
pkgver=r456458.c3c9e7c
pkgrel=1
pkgdesc="Testing version of the popular Firefox web browser"
arch=(i686 x86_64)
license=(MPL GPL LGPL)
url="http://www.mozilla.com/en-US/firefox/channel/"
depends=('gtk2' 'gtk3' 'mozilla-common' 'libxt' 'startup-notification' 'mime-types'
         'dbus-glib' 'alsa-lib' 'desktop-file-utils' 'hicolor-icon-theme'
         'libvpx' 'libevent' 'libpng' 'nss' 'hunspell' 'sqlite' 'gconf')
makedepends=('git' 'autoconf2.13' 'unzip' 'zip' 'diffutils' 'python2' 'yasm' 'mesa' 'imake'
             'xorg-server-xvfb' 'libpulse' 'gstreamer0.10-base'
             'inetutils')
optdepends=('networkmanager: Location detection via available WiFi networks'
            'gstreamer0.10-base-plugins: vorbis decoding, ogg demuxing'
            'gstreamer0.10-good-plugins: webm and mp4 demuxing'
            'gstreamer0.10-bad-plugins: aac, vp8 and opus decoding'
            'gstreamer0.10-ugly-plugins: h.264 and mp3 decoding'
            'gstreamer0.10-ffmpeg: more decoders'
            'libpulse: PulseAudio audio driver')
install=firefox-nightly.install
options=(!emptydirs !makeflags)
source=($_gitroot
        firefox-nightly.desktop
        firefox-install-dir.patch
        vendor.js)
md5sums=('SKIP'
         '21854d13a2c534506610743e3bd9b993'
         'cdd40dbd691d26365a3d4522b9cb86c6'
         'c164319e8dd09354fd6a8d42b923a16c')

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Arch Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact foutrelis@archlinux.org for
# more information.
_google_api_key=AIzaSyDwr302FpOSkGRpLlUpPThNTDPbXcIn_FM

pkgver() {
  cd "$srcdir/$_gitname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd ${srcdir}/${_gitname}

  cat >.mozconfig <<EOF
ac_add_options --prefix=/usr
ac_add_options --libdir=/usr/lib

ac_add_options --with-branding=browser/branding/nightly

# system libraries
ac_add_options --with-pthreads
ac_add_options --with-system-bz2
#ac_add_options --with-system-icu
ac_add_options --with-system-libvpx
ac_add_options --with-system-zlib
ac_add_options --with-system-jpeg
#ac_add_options --with-system-libevent
#ac_add_options --with-system-nspr
#ac_add_options --with-system-nss
#ac_add_options --with-system-png

ac_add_options --enable-canvas
ac_add_options --enable-chrome-format=omni
ac_add_options --enable-extensions=default
ac_add_options --enable-gio
ac_add_options --enable-gstreamer
ac_add_options --enable-libnotify
ac_add_options --enable-necko-wifi
ac_add_options --enable-pango
ac_add_options --enable-pulseaudio
ac_add_options --enable-startup-notification
ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-hunspell
ac_add_options --enable-system-pixman

ac_add_options --enable-default-toolkit=cairo-gtk3

ac_add_options --disable-crashreporter
ac_add_options --disable-gnomevfs
ac_add_options --disable-installer
ac_add_options --disable-javaxpcom
ac_add_options --disable-mochitest
ac_add_options --disable-tests
ac_add_options --disable-updater
ac_add_options --disable-xprint

# PGO
#mk_add_options PROFILE_GEN_SCRIPT='EXTRA_TEST_ARGS=10 \$(MAKE) -C \$(MOZ_OBJDIR) pgo-profile-run'
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdir
EOF

  echo -n "$_google_api_key" > google-api-key
  echo "ac_add_options --with-google-api-keyfile=\"$PWD/google-api-key\"" >>.mozconfig

  patch -Np1 -i ../firefox-install-dir.patch

  # Name it nightly
  sed -i '/^MOZ_APP_BASENAME=/s/Firefox/Firefox-Nightly/' \
    browser/confvars.sh

  # Point all the URLs back to firefox, not nightly
  sed -i 's/%APP%/firefox/g' \
    browser/app/profile/firefox.js

  rm -rf "$srcdir/path"
  mkdir "$srcdir/path"

  # WebRTC build tries to execute "python" and expects Python 2
  ln -s /usr/bin/python2 "$srcdir/path/python"

  # Use gold, as Mozilla can use some of its features, such as safe ICF
  ln -s /usr/bin/ld.gold "$srcdir/path/ld"

  # configure script misdetects the preprocessor without an optimization level
  # https://bugs.archlinux.org/task/34644
  sed -i '/ac_cpp=/s/$CPPFLAGS/& -O2/' configure.in
}

build() {
  cd ${srcdir}/${_gitname}

  export PATH="$srcdir/path:$PATH"
  export LDFLAGS=
  export PYTHON="/usr/bin/python2"
  unset CPPFLAGS

  make -f client.mk build MOZ_SERVICES_SYNC=1
}

package() {
  cd ${srcdir}/${_gitname}

  export PATH="$srcdir/path:$PATH"
  export PYTHON="/usr/bin/python2"

  make -f client.mk DESTDIR="$pkgdir" INSTALL_SDK= install

  install -Dm644 ../vendor.js "$pkgdir/usr/lib/firefox-nightly/browser/defaults/preferences/vendor.js"

  for i in 16 32 48; do
      install -Dm644 browser/branding/nightly/default$i.png \
        "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/firefox-nightly.png"
  done
  install -Dm644 browser/branding/nightly/content/icon64.png \
    "$pkgdir/usr/share/icons/hicolor/64x64/apps/firefox-nightly.png"
  install -Dm644 browser/branding/nightly/mozicon128.png \
    "$pkgdir/usr/share/icons/hicolor/128x128/apps/firefox-nightly.png"
  install -Dm644 browser/branding/nightly/content/about-logo.png \
    "$pkgdir/usr/share/icons/hicolor/210x210/apps/firefox-nightly.png"

  install -Dm644 ../firefox-nightly.desktop \
    "$pkgdir/usr/share/applications/firefox-nightly.desktop"

  # Use system-provided dictionaries
  rm -rf "$pkgdir"/usr/lib/firefox-nightly/{dictionaries,hyphenation}
  ln -s /usr/share/hunspell "$pkgdir/usr/lib/firefox-nightly/dictionaries"
  ln -s /usr/share/hyphen "$pkgdir/usr/lib/firefox-nightly/hyphenation"

  # We don't want the development stuff
  rm -rf "$pkgdir"/usr/{include,lib/firefox-nightly-devel,share/idl}

  #workaround for now
  #https://bugzilla.mozilla.org/show_bug.cgi?id=658850
  ln -sf firefox-nightly "$pkgdir/usr/lib/firefox-nightly/firefox-nightly-bin"
}
